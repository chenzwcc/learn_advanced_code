# _*_coding:utf-8_*_
# 创建用户  ：chenzhengwei
# 创建日期  ：2019/7/15 上午9:02

"""
dict查找的性能远大于list
在list中随着list数据的增大 查找时间会增大
在dict中查找元素不会随着dict的增大而增大

dict的内部实现是通过哈希表(set也是)
dict为什么查找那么快？---->利用数组，通过偏移量直接找到数据，时间复杂度是O(1)，而且不会随着数据量的增大而使查找速度下降
所以key必须可哈希--->不可变对象都是可哈希
dict的内存花销大(hash的缺点，一开始会申请比较大的内存空间，降低冲突的机会)，但是查询速度快， 自定义的对象 或者python内部的对象都是用dict包装的
dict的存储顺序和元素添加顺序有关---->因为可能会冲突，先储存，就先占据某个位置
添加数据有可能改变已有数据的顺序--->因为当数据过多，重新开始申请一块更大的内存，把数据搬迁过去的时候，会改变存储顺序
"""